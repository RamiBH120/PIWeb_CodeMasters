pipeline{
  agent any
   
   environment { 
      registryCredentials = "nexus" 
      registry = "172.19.136.127:8083" 
   }


  stages {

// npm install for installing the required packages for the project
  stage('Install dependencies') {
      steps{
        dir('backend'){
          
         sh 'npm install'

        }
      }
    }

// SonarQube will analyze the source code for the project
    stage('SonarQube Analysis') { 
      steps{ 
        script { 
          def scannerHome = tool 'scanner'
          withSonarQubeEnv { 
            sh "${scannerHome}/bin/sonar-scanner" 
            } 
          } 
        } 
      }

// Build the dependencies for the application into a single product
    stage('Build application') {
         steps{ 
            dir('backend'){
                sh 'npm run build'
         }
      }
  }

// Build product image with Docker
  stage('Building image with Docker (node)') { 
        steps{
            /*dir('backend'){
                sh 'docker build -t ramibh120/pibackend:1.0.0 .'
         }*/
         script { sh('sudo docker-compose build') }
      } 
    }
  }

  //  Uploading Docker images into Nexus Registry
    stage('Deploy to Nexus') {
     steps{  
         script {

             docker.withRegistry("http://"+registry, registryCredentials ) {
            sh('docker push $registry/nodemongoapp:1.0 ')
          }
        }
      }
    }

  //  Running application from Nexus
    stage('Run application ') {
     steps{  
         script {
           docker.withRegistry("http://"+registry, registryCredentials ) {

            sh('docker pull $registry/nodemongoapp:1.0 ')

            sh('docker-compose up -d ')
          }
        }
      }
    }
}